/* * product list  --douzy */define(function(require, exports, module) {	var $ = require("$");	require("ace-elements");	require("validation")($);	var tree = require("tree");	var courseTree = new tree();	var Map = require("map");	var shopDistrictMap = new Map();	 	var J = $;	var func = {		init : function(data) {			var self = this;			courseTree.init();			newTeacherForm.validation(function(obj, params) {				console.log(obj);				if (obj.id == "queryKey") {					J.post(_contentPath + '/user/agent/check/phone/'							+ queryKey.val() + '.json', null, function(data) {						params.err = data.result == 1 ? false : true;						if (params.err) {							if (data.result == 0)								params.msg = "此用户已是代理商";							if (data.result == -1)								params.msg = "用户不存在请先注册";							if (data.result == 2)								params.msg = "用户不是您的好友，不可维护";							phoneInput.val("");						} else {							phoneInput.val(queryKey.val());							J("#userNameInput").val(data.user.nickName);							J("#userIdInput").val(data.user.id);						}					}, 'json');				}				if (obj.id == "queryUpKey") {					if (queryUpKey.val().length > 0) {						J.post(_contentPath + '/user/agent/' + queryUpKey.val()								+ '.json', null, function(data) {							params.err = data.result == 1 ? false : true;							params.msg = "";							if (params.err) {								if (data.result == 0)									params.msg = "代理商不存在";								J("#upUserNameInput").val("");								J("#upUserIdInput").val("");								J("#parentIdInput").val("0");								J("#upAgentLevelInput").val("");								J("#upPhoneInput").val('');							} else {								if (data.agentVo.userId == J("#userIdInput")										.val()) {									params.err = true;									params.msg = "上下级代理不能是同一人";								} else if (data.agentVo.agentLevel >= J(										"#form-field-select-1").val()) {									params.err = true;									params.msg = "上级代理要比当前代理等级高";								} else {									J("#upUserNameInput").val(											data.agentVo.userName);									J("#upUserIdInput")											.val(data.agentVo.userId);									J("#parentIdInput")											.val(data.agentVo.userId);									J("#upPhoneInput").val(queryUpKey.val());									J("#upAgentLevelInput").val(											data.agentVo.agentLevel);									var agentLevelName = "";									if (data.agentVo.agentLevel == 1) {										agentLevelName = "官方代理";									}									if (data.agentVo.agentLevel == 2) {										agentLevelName = "区县代理";									}									if (data.agentVo.agentLevel == 3) {										agentLevelName = "中心代理";									}									if (data.agentVo.agentLevel == 4) {										agentLevelName = "星级代理";									}									J("#upAagentLevelInput").val(agentLevelName);								}							}						}, 'json');					} else {						J("#upUserNameInput").val('');						J("#upUserIdInput").val('');						J("#parentIdInput").val(0);						J("#upPhoneInput").val('');						J("#queryUpKey").val('');						J("#upAgentLevelInput").val('');					}				}				// if(obj.id=="province")				// {				// var len=$("#"+obj).val();				// console.log(len);				// params.err=false;				// }				// return false;			}, {				reqmark : false			});			newTeacherButton.bind('click', function(event) {				self.teacherButtonClick(event);			});			allSelectButton.bind('click', function() {				allSelectEvent();			});			queryUpKey.bind('change', function(evnet) {			});		},		teacherButtonClick : function(event) {			if (newTeacherForm.valid(this, "error!") == false) {				// $("#error-text").text("error!"); 1.0.4版本已将提示直接内置掉，简化前端。				return false;			}			if (J("#upAgentLevelInput").val() >= J("#form-field-select-1")					.val()) {				// $("#error-text").text("error!"); 1.0.4版本已将提示直接内置掉，简化前端。				alert("上级代理要比当前代理等级高");				return false;			}			J("#agentLevelInput").val(J("#form-field-select-1").val());			newTeacherForm.submit();		},	};	function shoppingDistrictsAdd(districts) {		var districtsArray = districts;		for (var i = 0; i < districtsArray.length; i++) {			var district = districtsArray[i];			shopDistrictMap.put(district, '');		}		if (districtsArray.length > 0) {			setshoppingDistrictsSelect();		}	}	function setshoppingDistrictsSelect() {		var keys = "";		var html = "";		shopDistrictMap.each(function(key) {			keys += key + ",";			html += '<span val="' + key + '" class="tag">' + key					+ '<button type="button" class="close">×</button></span>';		});		if (keys.length > 0) {			keys = keys.substring(0, keys.length - 1);		}		$("#shoppingDistrictId").val(keys);		$("#shoppingDistrictsSelectTags").html(html);		$("#shoppingDistrictsSelectTags button").bind('click', function(event) {			removeDistrictsSelect(this);		});	}	function removeDistrictsSelect(obj) {		var span = $(obj).parents("span");		span.remove();		shopDistrictMap.remove(span.attr("val"));		setshoppingDistrictsSelect();	}	function allSelectEvent() {		for (var int = 0; int < nowDistricts.length; int++) {			var district = nowDistricts[int].name;			shopDistrictMap.put(district, '');		}		setshoppingDistrictsSelect();	}	func.init();});