<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mouchina.moumou_server.dao.system.SystemMessageMapper">
	<resultMap id="BaseResultMap"
		type="com.mouchina.moumou_server.entity.system.SystemMessage">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="sys_id" property="sysId" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, content, user_id, sys_id,type,create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from system_message
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		system_message
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.mouchina.moumou_server.entity.system.SystemMessage">
		insert into system_message (id, content, user_id,
		sys_id,type,create_time)
		values (#{id,jdbcType=BIGINT},
		#{content,jdbcType=VARCHAR},
		#{userId,jdbcType=BIGINT},
		#{sysId,jdbcType=BIGINT},#{type,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.mouchina.moumou_server.entity.system.SystemMessage"
		useGeneratedKeys="true" keyProperty="id">
		insert into system_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="content != null">
				content,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="sysId != null">
				sys_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="sysId != null">
				#{sysId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.mouchina.moumou_server.entity.system.SystemMessage">
		update system_message
		<set>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="sysId != null">
				sys_id = #{sysId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT} and sys_id =
		#{sysId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.mouchina.moumou_server.entity.system.SystemMessage">
		update system_message
		set content =
		#{content,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=BIGINT},
		sys_id = #{sysId,jdbcType=BIGINT},
		type = #{type,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectMessage" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from system_message
		<where>
			<if test="id !=null">
				and id = #{id,jdbcType=BIGINT}
			</if>
			<if test="content != null">
				and content = #{content,jdbcType=VARCHAR}
			</if>
			<if test="userId != null">
				and user_id = #{userId,jdbcType=BIGINT}
			</if>
			<if test="sysId != null">
				and sys_id = #{sysId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
				and type = #{type,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	<select id="selectList" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from system_message a where not EXISTS (select 1 from system_message b
		where a.id = b.sys_id and b.user_id = #{userId,jdbcType=BIGINT}) and a.user_id is
		null and a.sys_id is null
		UNION ALL
		select
		<include refid="Base_Column_List" />
		from system_message a where not EXISTS (select 1 from system_message b
		where a.id = b.sys_id and b.user_id = #{userId,jdbcType=BIGINT}) and a.user_id =
		#{userId,jdbcType=BIGINT} and a.sys_id is null
	</select>
	<select id="selectAllMessage" resultMap="BaseResultMap" parameterType="java.lang.Long">
		SELECT
		<include refid="Base_Column_List" />
		FROM system_message WHERE sys_id IS NULL AND user_id is null
		UNION ALL
		select
		<include refid="Base_Column_List" />
		from system_message WHERE sys_id IS NULL AND user_id =
		#{userId,jdbcType=BIGINT} ORDER BY create_time DESC

	</select>
	<select id="selectRedMessage" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from system_message WHERE user_id = #{userId,jdbcType=BIGINT} and type
		= 1
	</select>
</mapper>